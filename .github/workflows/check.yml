name: 'Code checks'
on:
  push:
  workflow_dispatch:
concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true
defaults:
  run:
    shell: bash -euxlo pipefail {0}
jobs:
  format:
    name: 'Format'
    runs-on: ubuntu-24.04
    env:
      TITLE: ${{ github.event.pull_request.title }}
    steps:
      - name: Checkout
        uses: actions/checkout@v5
        with:
          persist-credentials: false
      - name: Install tools
        run: ./scripts/setup cargo-binstall shfmt yq cargo-sort
      - name: Install node dependencies
        run: npm ci --no-audit
      - name: Format
        run: ./scripts/fmt
      - name: Check formatted
        run: |
          test -z "$(git status --porcelain | grep -v --file .relaxedfmt)" || {
                  echo "FIX: Please run ./scripts/fmt"
                  git diff
                  exit 1
          }
  rust-tests:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-24.04]
    steps:
      - uses: actions/checkout@v5
        with:
          persist-credentials: false
      - name: Have relevant files changed?
        uses: dorny/paths-filter@v3
        id: changes
        with:
          filters: |
            test:
               - '.github/workflows/check.yml'
               - '**/*.rs'
               - '**/Cargo.*'
               - 'rust-toolchain.toml'
      - uses: actions/cache@v4
        if: steps.changes.outputs.test == 'true'
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
            target
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}-1
      - name: Lint rust code
        if: steps.changes.outputs.test == 'true'
        run: ./scripts/lint-rs
      - name: Run Unit Tests
        if: steps.changes.outputs.test == 'true'
        shell: bash
        run: scripts/test-rs
  installation:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-24.04]
    steps:
      - uses: actions/checkout@v5
        with:
          persist-credentials: false
      - name: Have relevant files changed?
        uses: dorny/paths-filter@v3
        id: changes
        with:
          filters: |
            test:
               - '!**/*.md'
      - uses: actions/cache@v4
        if: steps.changes.outputs.test == 'true'
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
            target
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}-1
      - name: Install dfx
        uses: dfinity/setup-dfx@main
      - name: Start dfx
        run: dfx start --clean --background
      - name: Deploy all canisters
        run: dfx deploy
      - name: Stop dfx
        run: dfx stop
  lint-github-actions:
    runs-on: ubuntu-24.04
    permissions:
      contents: read
    steps:
      - name: Checkout code
        uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0
        with:
          persist-credentials: false

      - uses: dorny/paths-filter@de90cc6fb38fc0963ad72b210f1f284cd68cea36 # v3.0.2
        id: change
        with:
          filters: |
            actions:
              - '.github/**/*'
              - '**/*.yml'
              - '**/*.yaml'

      - name: Install zizmor
        if: steps.change.outputs.actions == 'true'
        run: ./scripts/setup cargo-binstall zizmor

      - name: Lint GitHub workflows
        if: steps.change.outputs.actions == 'true'
        run: scripts/lint-github
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  check-pass:
    needs: ["format", "rust-tests", "installation"] # TODO: Add lint-github-actions
    if: ${{ always() }}
    runs-on: ubuntu-24.04
    steps:
      - uses: actions/checkout@v5
        with:
          persist-credentials: false
      - uses: ./.github/actions/needs_success
        with:
          needs: '${{ toJson(needs) }}'
